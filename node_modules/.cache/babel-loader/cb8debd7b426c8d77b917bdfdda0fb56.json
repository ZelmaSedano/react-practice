{"ast":null,"code":"var _jsxFileName = \"/Users/zelmasedano/Desktop/1_Techtonica/4) Practice/2_React_Practice/react-practice/src/components/Button.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Button(props) {\n  _s();\n\n  const [isClicked, setIsClicked] = useState(false); // false is the default\n  // create a variable\n\n  const background = isClicked ? 'pink' : 'white';\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      backgroundColor: background\n    },\n    onChange: () => setIsClicked(!isClicked) // onClick={() =>\n    //   isClicked\n    //     ? setColor('pink') && setIsClicked(true)\n    //     : setColor('blue') && setIsClicked(false)\n    // }\n    ,\n    children: [\"Button number\", props.number]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Button, \"+2jvnzgqyS4sm44z1s1whgWD4Tg=\");\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/zelmasedano/Desktop/1_Techtonica/4) Practice/2_React_Practice/react-practice/src/components/Button.js"],"names":["React","useState","Button","props","isClicked","setIsClicked","background","backgroundColor","number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C,CADqB,CAErB;AACA;;AACA,QAAMK,UAAU,GAAGF,SAAS,GAAG,MAAH,GAAY,OAAxC;AACA,sBACE;AACE,IAAA,KAAK,EAAE;AAAEG,MAAAA,eAAe,EAAED;AAAnB,KADT;AAEE,IAAA,QAAQ,EAAE,MAAMD,YAAY,CAAC,CAACD,SAAF,CAF9B,CAIE;AACA;AACA;AACA;AACA;AARF;AAAA,gCAUgBD,KAAK,CAACK,MAVtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAnBQN,M;;KAAAA,M;AAqBT,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction Button(props) {\n  const [isClicked, setIsClicked] = useState(false);\n  // false is the default\n  // create a variable\n  const background = isClicked ? 'pink' : 'white';\n  return (\n    <button\n      style={{ backgroundColor: background }}\n      onChange={() => setIsClicked(!isClicked)}\n\n      // onClick={() =>\n      //   isClicked\n      //     ? setColor('pink') && setIsClicked(true)\n      //     : setColor('blue') && setIsClicked(false)\n      // }\n    >\n      Button number{props.number}\n    </button>\n  );\n}\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}